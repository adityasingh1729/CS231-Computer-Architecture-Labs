$date
  Tue Sep  5 16:58:08 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module encoder4x2_tb $end
$var reg 1 ! a $end
$var reg 1 " b $end
$var reg 1 # c $end
$var reg 1 $ d $end
$var reg 1 % y1 $end
$var reg 1 & y2 $end
$scope module dut_instance $end
$var reg 4 ' i[3:0] $end
$var reg 2 ( y[1:0] $end
$scope module or1 $end
$var reg 1 ) x1 $end
$var reg 1 * x2 $end
$var reg 1 + y $end
$upscope $end
$scope module or2 $end
$var reg 1 , x1 $end
$var reg 1 - x2 $end
$var reg 1 . y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
0#
0$
0%
0&
b0001 '
b00 (
0)
0*
0+
0,
0-
0.
#1000000
0!
1"
1&
b0010 '
b01 (
1-
1.
#2000000
0"
1#
1%
0&
b0100 '
b10 (
1*
1+
0-
0.
#3000000
0#
1$
1&
b1000 '
b11 (
1)
0*
1,
1.
#4000000
1!
0$
0%
0&
b0001 '
b00 (
0)
0+
0,
0.
#5000000
0!
1"
1&
b0010 '
b01 (
1-
1.
#6000000
0"
1#
1%
0&
b0100 '
b10 (
1*
1+
0-
0.
#7000000
0#
1$
1&
b1000 '
b11 (
1)
0*
1,
1.
#8000000
1!
0$
0%
0&
b0001 '
b00 (
0)
0+
0,
0.
