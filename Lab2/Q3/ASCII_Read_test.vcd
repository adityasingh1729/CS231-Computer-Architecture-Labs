$date
  Mon Sep 18 21:43:40 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_textio $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module ascii_read_test $end
$var reg 8 ! input_sig[7:0] $end
$var reg 8 " output_sig[7:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$var reg 1 % data_valid $end
$scope module dut_instance $end
$var reg 1 & clk $end
$var reg 1 ' rst $end
$var reg 8 ( a[7:0] $end
$var reg 1 ) data_valid $end
$var reg 8 * z[7:0] $end
$comment buff is not handled $end
$comment outputarray is not handled $end
$var integer 32 + out_ptr $end
$var integer 32 , curr_out $end
$var reg 8 - chord_out[7:0] $end
$var reg 8 . chord_type[7:0] $end
$var reg 1 / chord_detected $end
$comment keys is not handled $end
$comment int_keys is not handled $end
$var reg 8 0 m[7:0] $end
$var reg 8 1 small_m[7:0] $end
$var reg 8 2 s[7:0] $end
$var reg 8 3 seven[7:0] $end
$var reg 8 4 sharp[7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b01000011 !
bUUUUUUUU "
U#
U$
U%
U&
U'
b01000011 (
U)
bUUUUUUUU *
b0 +
b0 ,
bUUUUUUUU -
bUUUUUUUU .
0/
b01001101 0
b01101101 1
b01110011 2
b00110111 3
b00011111 4
#1000000
0#
0&
#2000000
1#
1&
#3000000
b01000100 !
b01000100 (
#4000000
0#
0&
#5000000
1#
1&
#6000000
b01000011 !
b01000011 (
#7000000
0#
0&
#8000000
1#
1&
#9000000
b01000101 !
b01000101 (
#10000000
0#
0&
#11000000
1#
1&
b1 +
#12000000
b01000111 !
b01000111 (
#13000000
0#
0&
#14000000
1#
1&
b10 +
#15000000
b01100010 !
b01100010 (
#16000000
0#
0&
#17000000
1#
1&
b01000011 -
b00110111 .
1/
#18000000
b01000100 !
b01000100 (
#19000000
0#
0&
#20000000
1#
1&
b11 +
b00000000 .
0/
#21000000
b01000111 !
b01000111 (
#22000000
0#
0&
#23000000
1#
1&
#24000000
b01000001 !
b01000001 (
#25000000
0#
0&
#26000000
1#
1&
#27000000
#28000000
#29000000
0#
0&
#30000000
#31000000
1#
1&
#32000000
0#
0&
#33000000
#34000000
1#
1&
b100 +
#35000000
0#
0&
#36000000
#37000000
1#
1&
b101 +
#38000000
0#
0&
#39000000
#40000000
1#
1&
b110 +
#41000000
0#
0&
#42000000
#43000000
1#
1&
b111 +
#44000000
0#
0&
#45000000
#46000000
1#
1&
b1000 +
#47000000
0#
0&
#48000000
#49000000
1#
1&
b1001 +
#50000000
0#
0&
#51000000
#52000000
1#
1&
b1010 +
#53000000
0#
0&
#54000000
#55000000
1#
1&
b1011 +
#56000000
0#
0&
#57000000
#58000000
1#
1&
b1100 +
#59000000
0#
0&
#60000000
#61000000
1#
1&
b1101 +
#62000000
0#
0&
#63000000
#64000000
1#
1&
b1110 +
#65000000
0#
0&
#66000000
#67000000
1#
1&
b1111 +
#68000000
0#
0&
#69000000
#70000000
1#
1&
b10000 +
#71000000
0#
0&
#72000000
#73000000
1#
1&
b10001 +
#74000000
0#
0&
#75000000
#76000000
1#
1&
b10010 +
#77000000
0#
0&
#78000000
#79000000
1#
1&
b10011 +
#80000000
0#
0&
#81000000
#82000000
1#
1&
b10100 +
#83000000
0#
0&
#84000000
#85000000
1#
1&
b10101 +
#86000000
0#
0&
#87000000
#88000000
1#
1&
b10110 +
#89000000
0#
0&
#90000000
#91000000
1#
1&
b10111 +
#92000000
0#
0&
#93000000
#94000000
1#
1&
b11000 +
#95000000
0#
0&
#96000000
#97000000
1#
1&
b11001 +
#98000000
0#
0&
#99000000
#100000000
b01000011 "
1#
1%
1&
1)
b01000011 *
b11010 +
b1 ,
#101000000
0#
0&
#102000000
#103000000
b01000100 "
1#
1&
1)
b01000100 *
b11011 +
b10 ,
#104000000
0#
0&
#105000000
#106000000
b00110111 "
1#
1&
1)
b00110111 *
b11100 +
b11 ,
#107000000
0#
0&
#108000000
#109000000
b01000111 "
1#
1&
1)
b01000111 *
b11101 +
b100 ,
#110000000
0#
0&
#111000000
#112000000
b01000001 "
1#
1&
1)
b01000001 *
b11110 +
b101 ,
#113000000
0#
0&
#114000000
#115000000
1#
1&
1)
b11111 +
b110 ,
#116000000
0#
0&
#117000000
#118000000
1#
1&
1)
b100000 +
b111 ,
#119000000
0#
0&
#120000000
#121000000
1#
1&
1)
b100001 +
b1000 ,
#122000000
0#
0&
#123000000
